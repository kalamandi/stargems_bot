const orders = [
    {
    sum: 123,
    status: 1,
    item_id: 12,
    item_title: '170 –≥–µ–º–æ–≤',
    game_title: 'Brawl Stars',
    datems: 20002301020014,
    date: '20.07.2022 | 17:13',
    game_status: 1,
    game_id: 1
},
{
    sum: 123,
    status: 1,
    item_id: 12,
    item_title: '170 –≥–µ–º–æ–≤',
    game_title: 'Brawl Stars',
    datems: 20002301020014,
    date: '20.07.2022 | 17:13',
    game_status: 1,
    game_id: 1
},  {
    sum: 123,
    status: 1,
    item_id: 12,
    item_title: '170 –≥–µ–º–æ–≤',
    game_title: 'Brawl Stars',
    datems: 20002301020014,
    date: '20.07.2022 | 17:13',
    game_status: 1,
    game_id: 1
},
];

/* 
JSON ex: 

{
    sum: 123, // sum in RUB
    status: 1,
    item_id: 12,
    item_title: '170 –≥–µ–º–æ–≤',
    game_title: 'Brawl Stars',
    datems: 20002301020014,
    date: '20.07.2022 –≤ 17:13',
    game_status: 1,
    game_id: 1,
    customer_id: 1241, // in-bot ID
    doer_id: 1344 // in-bot ID
}

statuses: 
1 in progress
0 canceled
2 completed
*/

exports.execute = async (ctx, options) => { 
    if (!orders[0]) return ctx.reply('üôÅ –í—ã –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞');

    let text;
    const keyboard = [];
    const hasInProgress = orders.filter(x => x.status === 1)[0];

    if (hasInProgress) { 
        keyboard.push([{
            text: 'üîÑ –í—Å–µ –∑–∞–∫–∞–∑—ã',
            callback_data: JSON.stringify({
                command: 'orders_all'
            })
        }], []);
        text = '<b>üë®‚Äçüíª –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –≤ —Ä–∞–±–æ—Ç–µ:</b>\n\n';
    } else { 
        text = '<b>üìÉ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ (—Å—Ç—Ä. 1):</b>\n\n';
    };

    let count = 0;
    orders.map(order => { 
        if (hasInProgress) { 
            if (order.status === 1) {
                count++;
                text += `üîπ ${count}. <code>${order.game_title} - ${order.item_title}</code>\n || –°—É–º–º–∞: <code>${order.sum} ‚ÇΩ</code>\n || –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: <code>${order.date}</code>\n`
                keyboard[1].push({
                    text: count,
                    callback_data: JSON.stringify({
                        command: 'orders_selectOrder',
                        item: count
                    })        
                })
            } 
        } else {
            text += `üî∏ <code>${order.game_title} - ${order.item_title}</code>\n || –°—É–º–º–∞: <code>${order.sum} ‚ÇΩ</code>\n || –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: <code>${order.date}</code>\n || –°—Ç–∞—Ç—É—Å: <code>${order.status}</code>\n`
        }
    });

    if (hasInProgress) { 
        text += '\n‚ÑπÔ∏è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∑–∞–∫–∞–∑—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–æ–º–µ—Ä–æ–º';
    };

    return ctx.reply(text, {reply_markup: JSON.stringify({inline_keyboard: keyboard}), parse_mode: "HTML"});
};

exports.info = { 
    text: 'üì≤ –ó–∞–∫–∞–∑—ã'
}